name: release packages

on:
  workflow_dispatch:
  push:
    tags:
      - v*
            
jobs:
  get_latest_info:
    runs-on: ubuntu-latest
    outputs:
      commit_date: ${{ steps.get_latest_info.outputs.commit_date }}
      commit_sha: ${{ steps.get_latest_info.outputs.commit_sha }}
      short_commit_sha: ${{ steps.get_latest_info.outputs.short_commit_sha }}
      checksum: ${{ steps.get_latest_info.outputs.checksum }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: 'MetaCubeX/mihomo'
          ref: 'Alpha'
          path: 'mihomo'

      - name: get latest info
        id: get_latest_info
        run: |
          echo "commit_date=$(git -C mihomo log -n 1 --format=%cs)" >> $GITHUB_OUTPUT
          echo "commit_sha=$(git -C mihomo rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "short_commit_sha=$(git -C mihomo rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          git -C mihomo config tar.xz.command "xz -c"
          git -C mihomo archive --output=mihomo.tar.xz HEAD
          echo "checksum=$(sha256sum mihomo/mihomo.tar.xz | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

  release:
    needs: get_latest_info
    name: release ${{ matrix.arch }}-${{ matrix.branch }}
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
        branch:
          - SNAPSHOT
          - openwrt-24.10

    steps:
      - name: set timezone
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          date

      - name: system info
        run: |
          lscpu | grep -E '^Architecture|^CPU\(s\):|^Model name'
          uname -sr
          lsb_release -a
          free -h
          
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: apoiston/openwrt-nikki
          ref: main
          path: openwrt-nikki
          fetch-depth: 1

      - name: update version
        run: |
          sed -i "s/PKG_SOURCE_DATE:=.*/PKG_SOURCE_DATE:=${{ needs.get_latest_info.outputs.commit_date }}/" openwrt-nikki/nikki/Makefile
          sed -i "s/PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=${{ needs.get_latest_info.outputs.commit_sha }}/" openwrt-nikki/nikki/Makefile
          sed -i "s/PKG_MIRROR_HASH:=.*/PKG_MIRROR_HASH:=${{ needs.get_latest_info.outputs.checksum }}/" openwrt-nikki/nikki/Makefile
          sed -i "s/PKG_BUILD_VERSION:=.*/PKG_BUILD_VERSION:=alpha-${{ needs.get_latest_info.outputs.short_commit_sha }}/" openwrt-nikki/nikki/Makefile

      - name: show info
        run: |
          ls -l $GITHUB_WORKSPACE
          grep -o 'PKG_BUILD_VERSION:.*' openwrt-nikki/nikki/Makefile | cut -d '=' -f 2

      - name: build
        uses: apoiston/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.branch }}
          FEEDNAME: nikki
          PACKAGES: luci-app-nikki
          INDEX: 1
          NO_REFRESH_CHECK: true
          KEY_BUILD: ${{ secrets.KEY_BUILD }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
          
      - name: compress
        run: |
          tar -c -z -f nikki_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz -C bin/packages/${{ matrix.arch }}/nikki .
          mkdir -p public/${{ matrix.branch }}/${{ matrix.arch }}
          mv bin/packages/${{ matrix.arch }}/nikki public/${{ matrix.branch }}/${{ matrix.arch }}
          tar -c -z -f nikki_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz public/${{ matrix.branch }}/${{ matrix.arch }}

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            nikki_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz

      - name: upload
        uses: actions/upload-artifact@main
        with:
          name: nikki_${{ matrix.arch }}-${{ matrix.branch }}
          path: nikki_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz

  feed:
    needs: release
    name: feed
    runs-on: ubuntu-latest

    steps:
      - name: download
        uses: actions/download-artifact@main
        with:
          pattern: nikki_*
          merge-multiple: true
      
      - name: uncompress
        run: |
          for file in nikki_*.tar.gz; do tar -x -z -f "$file"; done
      
      - name: keys
        run: |
          echo "${{ secrets.KEY_BUILD_PUB }}" > public/key-build.pub
          echo "${{ secrets.PUBLIC_KEY }}" > public/public-key.pem

      - name: index
        uses: apoiston/actions@index

      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: apoiston/openwrt-nikki
          ref: main
          path: openwrt-nikki
          fetch-depth: 1

      - name: rsync scripts
        run: |
          cp openwrt-nikki/feed.sh openwrt-nikki/install.sh openwrt-nikki/uninstall.sh public/ 

      - name: feed
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          commit_message: "release: ${{ github.ref_name }}"

  clean:
    needs: feed
    name: clean
    runs-on: ubuntu-latest

    steps:
      - name: clean pages
        uses: apoiston/actions@clean
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2